plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.flywaydb.flyway" version "9.12.0"
    id "nu.studer.jooq" version "8.1"
    id 'checkstyle'
}

group = 'com.gmail.geraldik'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.data:spring-data-commons'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    jooqGenerator 'org.postgresql:postgresql:42.2.27'

}

flyway {
    url = "jdbc:postgresql://127.0.0.1:5432/newsfeed"
    user = "postgres"
    password = "password"

}

jooq {
    version = '3.14.13'
    configurations {
        main {
            generateSchemaSourceOnCompilation = false
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.DEBUG
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/newsfeed'
                    user = 'postgres'
                    password = 'password'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                        excludes = "FLYWAY_SCHEMA_HISTORY"
                    }
                    generate {
                        deprecated = false
                        fluentSetters = true
                        javaTimeTypes = true
                        pojosEqualsAndHashCode = true
                        daos = true
                    }
                    target {
                        packageName = 'com.gmail.geraldik.newsfeed.pesristence'
                        directory = 'src/jooq/java'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
