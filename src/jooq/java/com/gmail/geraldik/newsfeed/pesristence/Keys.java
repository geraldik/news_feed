/*
 * This file is generated by jOOQ.
 */
package com.gmail.geraldik.newsfeed.pesristence;


import com.gmail.geraldik.newsfeed.pesristence.tables.Comment;
import com.gmail.geraldik.newsfeed.pesristence.tables.Item;
import com.gmail.geraldik.newsfeed.pesristence.tables.records.CommentRecord;
import com.gmail.geraldik.newsfeed.pesristence.tables.records.ItemRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CommentRecord> COMMENT_PKEY = Internal.createUniqueKey(Comment.COMMENT, DSL.name("comment_pkey"), new TableField[] { Comment.COMMENT.ID }, true);
    public static final UniqueKey<ItemRecord> ITEM_PKEY = Internal.createUniqueKey(Item.ITEM, DSL.name("item_pkey"), new TableField[] { Item.ITEM.ID }, true);
    public static final UniqueKey<ItemRecord> ITEM_TITLE_KEY = Internal.createUniqueKey(Item.ITEM, DSL.name("item_title_key"), new TableField[] { Item.ITEM.TITLE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CommentRecord, ItemRecord> COMMENT__COMMENT_ITEM_ID_FKEY = Internal.createForeignKey(Comment.COMMENT, DSL.name("comment_item_id_fkey"), new TableField[] { Comment.COMMENT.ITEM_ID }, Keys.ITEM_PKEY, new TableField[] { Item.ITEM.ID }, true);
}
