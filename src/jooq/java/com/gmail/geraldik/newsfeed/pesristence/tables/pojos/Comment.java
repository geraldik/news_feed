/*
 * This file is generated by jOOQ.
 */
package com.gmail.geraldik.newsfeed.pesristence.tables.pojos;


import java.io.Serializable;


/**
 * Comment on the news
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Comment implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String  commentator;
    private String  body;
    private Integer itemId;

    public Comment() {}

    public Comment(Comment value) {
        this.id = value.id;
        this.commentator = value.commentator;
        this.body = value.body;
        this.itemId = value.itemId;
    }

    public Comment(
        Integer id,
        String  commentator,
        String  body,
        Integer itemId
    ) {
        this.id = id;
        this.commentator = commentator;
        this.body = body;
        this.itemId = itemId;
    }

    /**
     * Getter for <code>public.comment.id</code>. Comment id
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.comment.id</code>. Comment id
     */
    public Comment setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.comment.commentator</code>. Commentator name
     */
    public String getCommentator() {
        return this.commentator;
    }

    /**
     * Setter for <code>public.comment.commentator</code>. Commentator name
     */
    public Comment setCommentator(String commentator) {
        this.commentator = commentator;
        return this;
    }

    /**
     * Getter for <code>public.comment.body</code>. Comment text
     */
    public String getBody() {
        return this.body;
    }

    /**
     * Setter for <code>public.comment.body</code>. Comment text
     */
    public Comment setBody(String body) {
        this.body = body;
        return this;
    }

    /**
     * Getter for <code>public.comment.item_id</code>. Id of the news to which the comment belongs
     */
    public Integer getItemId() {
        return this.itemId;
    }

    /**
     * Setter for <code>public.comment.item_id</code>. Id of the news to which the comment belongs
     */
    public Comment setItemId(Integer itemId) {
        this.itemId = itemId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Comment other = (Comment) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (commentator == null) {
            if (other.commentator != null)
                return false;
        }
        else if (!commentator.equals(other.commentator))
            return false;
        if (body == null) {
            if (other.body != null)
                return false;
        }
        else if (!body.equals(other.body))
            return false;
        if (itemId == null) {
            if (other.itemId != null)
                return false;
        }
        else if (!itemId.equals(other.itemId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.commentator == null) ? 0 : this.commentator.hashCode());
        result = prime * result + ((this.body == null) ? 0 : this.body.hashCode());
        result = prime * result + ((this.itemId == null) ? 0 : this.itemId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Comment (");

        sb.append(id);
        sb.append(", ").append(commentator);
        sb.append(", ").append(body);
        sb.append(", ").append(itemId);

        sb.append(")");
        return sb.toString();
    }
}
